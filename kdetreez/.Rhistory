calculateGUI
calculateGUI()
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
?nparLD
library(nparLD)
?nparLD
window <- gtkWindow()
library(GTk2)
library(Gtk2)
library(gtk2)
library(RGtk2)
#!/usr/bin/R
library(RGtk2)
library(nparLD)
window <- gtkWindow()
window["title"] <- "Calculator"
frame <- gtkFrameNew("Calculate")
window$add(frame)
box1 <- gtkVBoxNew()
box1$setBorderWidth(30)
frame$add(box1)   #add box1 to the frame
box2 <- gtkHBoxNew(spacing= 10) #distance between elements
box2$setBorderWidth(24)
TextToCalculate<- gtkEntryNew() #text field with expresion to calculate
TextToCalculate$setWidthChars(25)
box1$packStart(TextToCalculate)
label = gtkLabelNewWithMnemonic("formula") #text label
box1$packStart(label)
window <- gtkWindow()
window["title"] <- "Calculator"
frame <- gtkFrameNew("Calculate")
window$add(frame)
box1 <- gtkVBoxNew()
box1$setBorderWidth(30)
frame$add(box1)   #add box1 to the frame
box2 <- gtkHBoxNew(spacing= 10) #distance between elements
box2$setBorderWidth(24)
label = gtkLabelNewWithMnemonic("formula") #text label
box1$packStart(label, fill=F)
TextToCalculate<- gtkEntryNew() #text field with expresion to calculate
TextToCalculate$setWidthChars(25)
box1$packStart(TextToCalculate)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
?nparLD
?RGtk2
?`gtk-Filesystem-utilities`
?gtkFileChooserButton
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
?gtkFileChooserButton
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
?nparLD
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
?nparLD
library(rankFD)
calculateGUI()
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
?gtkLabelNewWithMnemonic
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
?gtkEntryNew
alpha
formula$
formula
?gtkEntryNew
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
calculateGUI()
calculateGUI
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
?gtkLabelNewWithMnemonic
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
source('~/Desktop/Yannick/Studium/Master/Semester03/Modulprojekt/nparLD_GUI.R', echo=TRUE)
setwd("Desktop/Yannick/BGBM/kdetreez")
#!/usr/bin/R
library(kdetrees)
library(ape)
library(ggplot2)
library(plotly)
ks <- seq(0,1.8,0.1)
tree_data <- read.table("SUMMARY/pylogeny_hypoTreeShortestDistUnconstTree.tre",sep=" ", header = FALSE, stringsAsFactors = FALSE)
multitrees <- ape::read.tree(text=tree_data$V2, tree.names = tree_data$V1)
multitrees <- multi2di(multitrees)
klen <- as.numeric(length(ks))
tlen <- as.numeric(length(tree_data$V1))
mat_geo_pylogeny <- matrix(rep(0,klen*tlen),nrow=tlen,ncol=klen, dimnames = list(tree_data$V1, ks))
mat_dis_pylogeny <- matrix(rep(0,klen*tlen),nrow=tlen,ncol=klen, dimnames =list(tree_data$V1, ks))
# See Advanced options (outlier detection [k] & distance method [distance])
for(k in ks){
result <- kdetrees(multitrees, k=k, distance="geodesic")
for(out in names(result$outliers)){
mat_geo_pylogeny[out,as.character(k)] <- 1
}
result <- kdetrees(multitrees, k=k, distance="dissimilarity")
for(out in names(result$outliers)){
mat_dis_pylogeny[out,as.character(k)] <- 1
}
}
plot_ly(x = ks, y = tree_data$V1,z = mat_dis_pylogeny, type = "heatmap", colors = colorRamp(c("darkgreen", "darkred")))
plot_ly(x = ks, y = tree_data$V1,z = mat_dis_pylogeny, type = "heatmap", colors = colorRamp(c("darkgreen", "darkred")))
tree_data <- read.table("SUMMARY/iqtree_hypoTreeShortestDistUnconstTree.tre",sep=" ", header = FALSE, stringsAsFactors = FALSE)
multitrees <- ape::read.tree(text=tree_data$V2, tree.names = tree_data$V1)
multitrees <- multi2di(multitrees)
klen <- as.numeric(length(ks))
tlen <- as.numeric(length(tree_data$V1))
mat_geo_iqtree <- matrix(rep(0,klen*tlen),nrow=tlen,ncol=klen, dimnames = list(tree_data$V1, ks))
mat_dis_iqtree <- matrix(rep(0,klen*tlen),nrow=tlen,ncol=klen, dimnames = list(tree_data$V1, ks))
# See Advanced options (outlier detection [k] & distance method [distance])
for(k in ks){
result <- kdetrees(multitrees, k=k, distance="geodesic")
for(out in names(result$outliers)){
mat_geo_iqtree[out,as.character(k)] <- 1
}
result <- kdetrees(multitrees, k=k, distance="dissimilarity")
for(out in names(result$outliers)){
mat_dis_iqtree[out,as.character(k)] <- 1
}
}
plot_ly(x = ks, y = tree_data$V1,z = mat_dis_iqtree, type = "heatmap", colors = colorRamp(c("darkgreen", "darkred")))
plot_ly(x = ks, y = tree_data$V1,z = mat_geo_iqtree, type = "heatmap", colors = colorRamp(c("darkgreen", "darkred")))
ks <- seq(0,2,0.1)
tree_data <- read.table("SUMMARY/pylogeny_hypoTreeShortestDistUnconstTree.tre",sep=" ", header = FALSE, stringsAsFactors = FALSE)
multitrees <- ape::read.tree(text=tree_data$V2, tree.names = tree_data$V1)
multitrees <- multi2di(multitrees)
klen <- as.numeric(length(ks))
tlen <- as.numeric(length(tree_data$V1))
mat_geo_pylogeny <- matrix(rep(0,klen*tlen),nrow=tlen,ncol=klen, dimnames = list(tree_data$V1, ks))
mat_dis_pylogeny <- matrix(rep(0,klen*tlen),nrow=tlen,ncol=klen, dimnames =list(tree_data$V1, ks))
# See Advanced options (outlier detection [k] & distance method [distance])
for(k in ks){
result <- kdetrees(multitrees, k=k, distance="geodesic")
for(out in names(result$outliers)){
mat_geo_pylogeny[out,as.character(k)] <- 1
}
result <- kdetrees(multitrees, k=k, distance="dissimilarity")
for(out in names(result$outliers)){
mat_dis_pylogeny[out,as.character(k)] <- 1
}
}
plot_ly(x = ks, y = tree_data$V1,z = mat_dis_pylogeny, type = "heatmap", colors = colorRamp(c("darkgreen", "darkred")))
plot_ly(x = ks, y = tree_data$V1,z = mat_dis_pylogeny, type = "heatmap", colors = colorRamp(c("darkgreen", "darkred")))
tree_data <- read.table("SUMMARY/iqtree_hypoTreeShortestDistUnconstTree.tre",sep=" ", header = FALSE, stringsAsFactors = FALSE)
multitrees <- ape::read.tree(text=tree_data$V2, tree.names = tree_data$V1)
multitrees <- multi2di(multitrees)
klen <- as.numeric(length(ks))
tlen <- as.numeric(length(tree_data$V1))
mat_geo_iqtree <- matrix(rep(0,klen*tlen),nrow=tlen,ncol=klen, dimnames = list(tree_data$V1, ks))
mat_dis_iqtree <- matrix(rep(0,klen*tlen),nrow=tlen,ncol=klen, dimnames = list(tree_data$V1, ks))
# See Advanced options (outlier detection [k] & distance method [distance])
for(k in ks){
result <- kdetrees(multitrees, k=k, distance="geodesic")
for(out in names(result$outliers)){
mat_geo_iqtree[out,as.character(k)] <- 1
}
result <- kdetrees(multitrees, k=k, distance="dissimilarity")
for(out in names(result$outliers)){
mat_dis_iqtree[out,as.character(k)] <- 1
}
}
plot_ly(x = ks, y = tree_data$V1,z = mat_dis_iqtree, type = "heatmap", colors = colorRamp(c("darkgreen", "darkred")))
plot_ly(x = ks, y = tree_data$V1,z = mat_geo_iqtree, type = "heatmap", colors = colorRamp(c("darkgreen", "darkred")))
#!/usr/bin/R
library(kdetrees)
library(ape)
library(ggplot2)
library(plotly)
ks <- seq(0,2,0.1)
tree_data <- read.table("SUMMARY/pylogeny_hypoTreeShortestDistUnconstTree.tre",sep=" ", header = FALSE, stringsAsFactors = FALSE)
multitrees <- ape::read.tree(text=tree_data$V2, tree.names = tree_data$V1)
multitrees <- multi2di(multitrees)
klen <- as.numeric(length(ks))
tlen <- as.numeric(length(tree_data$V1))
mat_geo_pylogeny <- matrix(rep(0,klen*tlen),nrow=tlen,ncol=klen, dimnames = list(tree_data$V1, ks))
mat_dis_pylogeny <- matrix(rep(0,klen*tlen),nrow=tlen,ncol=klen, dimnames =list(tree_data$V1, ks))
# See Advanced options (outlier detection [k] & distance method [distance])
for(k in ks){
result <- kdetrees(multitrees, k=k, distance="geodesic")
for(out in names(result$outliers)){
mat_geo_pylogeny[out,as.character(k)] <- 1
}
result <- kdetrees(multitrees, k=k, distance="dissimilarity")
for(out in names(result$outliers)){
mat_dis_pylogeny[out,as.character(k)] <- 1
}
}
plot_ly(x = ks, y = tree_data$V1,z = mat_dis_pylogeny, type = "heatmap", colors = colorRamp(c("darkgreen", "darkred")))
plot_ly(x = ks, y = tree_data$V1,z = mat_geo_pylogeny, type = "heatmap", colors = colorRamp(c("darkgreen", "darkred")))
tree_data <- read.table("SUMMARY/iqtree_hypoTreeShortestDistUnconstTree.tre",sep=" ", header = FALSE, stringsAsFactors = FALSE)
multitrees <- ape::read.tree(text=tree_data$V2, tree.names = tree_data$V1)
multitrees <- multi2di(multitrees)
klen <- as.numeric(length(ks))
tlen <- as.numeric(length(tree_data$V1))
mat_geo_iqtree <- matrix(rep(0,klen*tlen),nrow=tlen,ncol=klen, dimnames = list(tree_data$V1, ks))
mat_dis_iqtree <- matrix(rep(0,klen*tlen),nrow=tlen,ncol=klen, dimnames = list(tree_data$V1, ks))
# See Advanced options (outlier detection [k] & distance method [distance])
for(k in ks){
result <- kdetrees(multitrees, k=k, distance="geodesic")
for(out in names(result$outliers)){
mat_geo_iqtree[out,as.character(k)] <- 1
}
result <- kdetrees(multitrees, k=k, distance="dissimilarity")
for(out in names(result$outliers)){
mat_dis_iqtree[out,as.character(k)] <- 1
}
}
plot_ly(x = ks, y = tree_data$V1,z = mat_dis_iqtree, type = "heatmap", colors = colorRamp(c("darkgreen", "darkred")))
plot_ly(x = ks, y = tree_data$V1,z = mat_geo_iqtree, type = "heatmap", colors = colorRamp(c("darkgreen", "darkred")))
#!/usr/bin/R
library(kdetrees)
library(ape)
library(ggplot2)
library(plotly)
ks <- seq(0,2,0.1)
tree_data <- read.table("SUMMARY/iqtree_hypoTreeShortestDistUnconstTree.tre",sep=" ", header = FALSE, stringsAsFactors = FALSE)
multitrees <- ape::read.tree(text=tree_data$V2, tree.names = tree_data$V1)
multitrees <- multi2di(multitrees)
klen <- as.numeric(length(ks))
tlen <- as.numeric(length(tree_data$V1))
mat_geo_iqtree <- matrix(rep(0,klen*tlen),nrow=tlen,ncol=klen, dimnames = list(tree_data$V1, ks))
mat_dis_iqtree <- matrix(rep(0,klen*tlen),nrow=tlen,ncol=klen, dimnames = list(tree_data$V1, ks))
# See Advanced options (outlier detection [k] & distance method [distance])
for(k in ks){
result <- kdetrees(multitrees, k=k, distance="geodesic")
for(out in names(result$outliers)){
mat_geo_iqtree[out,as.character(k)] <- 1
}
result <- kdetrees(multitrees, k=k, distance="dissimilarity")
for(out in names(result$outliers)){
mat_dis_iqtree[out,as.character(k)] <- 1
}
}
plot_ly(x = ks, y = tree_data$V1,z = mat_dis_iqtree, type = "heatmap", colors = colorRamp(c("darkgreen", "darkred")))
install.packages("fifer")
install_github("dustinfife/fifer")
install_packages("devtools")
install.packages("devtools")
devtools::install_github("dustinfife/fifer")
#!/usr/bin/R
library(kdetrees)
library(ape)
library(ggplot2)
library(plotly)
ks <- seq(0,2,0.1)
tree_data <- read.table("SUMMARY/pylogeny_hypoTreeShortestDistUnconstTree.tre",sep=" ", header = FALSE, stringsAsFactors = FALSE)
multitrees <- ape::read.tree(text=tree_data$V2, tree.names = tree_data$V1)
multitrees <- multi2di(multitrees)
klen <- as.numeric(length(ks))
tlen <- as.numeric(length(tree_data$V1))
mat_geo_pylogeny <- matrix(rep(0,klen*tlen),nrow=tlen,ncol=klen, dimnames = list(tree_data$V1, ks))
mat_dis_pylogeny <- matrix(rep(0,klen*tlen),nrow=tlen,ncol=klen, dimnames =list(tree_data$V1, ks))
# See Advanced options (outlier detection [k] & distance method [distance])
for(k in ks){
result <- kdetrees(multitrees, k=k, distance="geodesic")
for(out in names(result$outliers)){
mat_geo_pylogeny[out,as.character(k)] <- 1
}
result <- kdetrees(multitrees, k=k, distance="dissimilarity")
for(out in names(result$outliers)){
mat_dis_pylogeny[out,as.character(k)] <- 1
}
}
tree_data <- read.table("SUMMARY/iqtree_hypoTreeShortestDistUnconstTree.tre",sep=" ", header = FALSE, stringsAsFactors = FALSE)
multitrees <- ape::read.tree(text=tree_data$V2, tree.names = tree_data$V1)
multitrees <- multi2di(multitrees)
klen <- as.numeric(length(ks))
tlen <- as.numeric(length(tree_data$V1))
mat_geo_iqtree <- matrix(rep(0,klen*tlen),nrow=tlen,ncol=klen, dimnames = list(tree_data$V1, ks))
mat_dis_iqtree <- matrix(rep(0,klen*tlen),nrow=tlen,ncol=klen, dimnames = list(tree_data$V1, ks))
# See Advanced options (outlier detection [k] & distance method [distance])
for(k in ks){
result <- kdetrees(multitrees, k=k, distance="geodesic")
for(out in names(result$outliers)){
mat_geo_iqtree[out,as.character(k)] <- 1
}
result <- kdetrees(multitrees, k=k, distance="dissimilarity")
for(out in names(result$outliers)){
mat_dis_iqtree[out,as.character(k)] <- 1
}
}
heatmap(tree_data$V1, Colv = NA, Rowv = NA, scale="column")
?heatmap
heatmap(mat_dis_iqtree, Colv = NA, Rowv = NA, scale="column")
?heatmap
source('~/Desktop/Yannick/BGBM/kdetreez/kdetreez.R', echo=TRUE)
heatmap(mat_dis_iqtree, Colv = NA, Rowv = NA,RowSideColors = rc, ColSideColors = cc, scale="column")
cc <- rainbow(ncol(x), start = 0, end = .3)
rc <- rainbow(nrow(mat_dis_iqtree), start = 0, end = .3)
cc <- rainbow(ncol(mat_dis_iqtree), start = 0, end = .3)
heatmap(mat_dis_iqtree, Colv = NA, Rowv = NA,RowSideColors = rc, ColSideColors = cc, scale="column")
?heatmap
heatmap(mat_dis_iqtree, Colv = NA, Rowv = NA,col = cm.colors(256), scale="column")
heatmap(mat_dis_iqtree, Colv = NA, Rowv = NA,col = cm.colors(0), scale="column")
heatmap(mat_dis_iqtree, Colv = NA, Rowv = NA,col = cm.colors(1), scale="column")
heatmap(mat_dis_iqtree, Colv = NA, Rowv = NA,col = cm.colors(2), scale="column")
heatmap(mat_dis_iqtree, Colv = NA, Rowv = NA,col = cm.colors(3), scale="column")
heatmap(mat_dis_iqtree, Colv = NA, Rowv = NA,col = cm.colors(4), scale="column")
?heatmap
heatmap(mat_dis_iqtree, Colv = NA, Rowv = NA, scale="column")
heatmap(mat_geo_iqtree, Colv = NA, Rowv = NA, scale="column")
heatmap(mat_dis_iqtree, Colv = NA, Rowv = NA, scale="None")
heatmap(mat_dis_iqtree, Colv = NA, Rowv = NA, scale="none")
heatmap(mat_geo_iqtree, Colv = NA, Rowv = NA, scale="none")
?heatmap
?aes
nba <- read.csv("http://datasets.flowingdata.com/ppg2008.csv")
nba$Name <- with(nba, reorder(Name, PTS))
library(ggplot2)
nba.m <- ddply(nba.m, .(variable), transform,
+     rescale = rescale(value))
nba.m <- ddply(nba.m, .(variable), transfom, rescale = rescale(value))
nba.m <- ddply(nba.m, .(variable), transform, rescale = rescale(value))
?ggplot
ggplot(mat_dis_iqtree)                                                                                             +     high = "steelblue"))
ggplot(mat_dis_iqtree)                                                                                             +     high = "steelblue"))
ggplot(mat_dis_iqtree)                                                                                             +     high = "steelblue"))
?ggplot
ggplot(mat_dis_iqtree
ggplot(mat_dis_iqtree)
ggplot(mat_dis_iqtree)
data.frame(mat_dis_iqtree)
ggplot(data.frame(mat_dis_iqtree))
data.frame(mat_dis_iqtree)
nba.M
nba.m <- melt(nba)
nba <- read.csv("http://datasets.flowingdata.com/ppg2008.csv")
library(ggplot2)
nba.m <- melt(nba)
nba$Name <- with(nba, reorder(Name, PTS))
nba.m <- melt(nba)
install.packages("stats-package")
install.packages("statspackage")
ggplot(data.frame(mat_dis_iqtree))
ggplot(data.frame(mat_dis_iqtree))
?ggplot
data.frame(mat_dis_iqtree)
data.frame(mat_dis_iqtree)$1
data.frame(mat_dis_iqtree)$V1
data.frame(mat_dis_iqtree)$V3
data.frame(mat_dis_iqtree)[1,]
data.frame(mat_dis_iqtree)[,1]
data.frame(mat_dis_iqtree)$Names
data.frame(mat_dis_iqtree)$Name
data.frame(mat_dis_iqtree)$
1
data.frame(mat_dis_iqtree)$"psbA_hypoA"
data.frame(mat_dis_iqtree)$"psbA_hypoB"
data.frame(mat_dis_iqtree)$"psbA_hypoC"
data.frame(mat_dis_iqtree)["psbA_hypoA"]
data.frame(mat_dis_iqtree)["psbA_hypoB"]
data.frame(mat_dis_iqtree)["psbA_hypoC"]
data.frame(mat_dis_iqtree)
ggplot(data.frame(mat_dis_iqtree), aes(variable, Name)) + geom_tile(aes(fill = rescale), + colour = "white") + scale_fill_gradient(low = "white",  high = "steelblue")))
ggplot(data.frame(mat_dis_iqtree), aes(variable, Name)) + geom_tile(aes(fill = rescale), + colour = "white") + scale_fill_gradient(low = "white",  high = "steelblue"))
data.frame(mat_dis_iqtree)[1,]
data.frame(mat_dis_iqtree)[,1]
mat_dis_iqtree
nba.M
ggplot(data.frame(mat_dis_iqtree), aes(variable, Name))
nba
?data.frame
mat_dis_iqtree
data.frame(mat_dis_iqtree)
data.frame(mat_dis_iqtree)$X1
data.frame(mat_dis_iqtree)$X0
mat_dis_iqtree
as.data.frame(mat_dis_iqtree)
?data.frame
as.data.frame(mat_dis_iqtree, check.names=FALSE)
as.data.frame(c(mat_dis_iqtree, tree_data$V1)
)
mat_dis_iqtree <- data.frame(mat_dis_iqtree)
mat_dis_iqtree['names'] <- tree_data$V1
mat_dis_iqtree
ggplot(mat_dis_iqtree, aes(variable, names))
ggplot(mat_dis_iqtree, aes(X0, names))
ggplot(mat_dis_iqtree, aes(c(0,2), names))
ggplot(mat_dis_iqtree, aes(X0, names))
ggplot(mat_dis_iqtree, aes(X0, names) + geom_tile(aes(fill = performance)) )
ggplot(mat_dis_iqtree, aes(X0, names)) + geom_tile(aes(fill = performance))
df.team_data <- expand.grid(teams = c("Team A", "Team B", "Team C", "Team D")
,metrics = c("Metric 1", "Metric 2", "Metric 3", "Metric 4", "Metric 5")
)
set.seed(41)
df.team_data$performance <- rnorm(nrow(df.team_data))
head(df.team_data)
melt
?melt
mat_dis_iqtree
source('~/Desktop/Yannick/BGBM/kdetreez/kdetreez.R', echo=TRUE)
source('~/Desktop/Yannick/BGBM/kdetreez/kdetreez.R', echo=TRUE)
melt(mat_dis_iqtree)
ggplt2::melt(mat_dis_iqtree)
ggplot2::melt(mat_dis_iqtree)
?melt
melt
melt())
melt()
melt(data.frame(mat_dis_iqtree))
data.table::melt(data.frame(mat_dis_iqtree))
reshape2::melt(data.frame(mat_dis_iqtree))
mat_dis_iqtree <- data.frame(mat_dis_iqtree)
mat_geo_iqtree <- data.frame(mat_geo_iqtree)
mat_dis_pylogeny <- data.frame(mat_dis_pylogeny)
mat_geo_pylogeny <- data.frame(mat_geo_pylogeny)
head(mat_dis_pylogeny)
mat_dis_iqtree <- reshape2::melt(data.frame(mat_dis_iqtree))
source('~/Desktop/Yannick/BGBM/kdetreez/kdetreez.R', echo=TRUE)
mat_dis_iqtree <- reshape2::melt(data.frame(mat_dis_iqtree))
mat_dis_iqtree
?reshape2::melt
source('~/Desktop/Yannick/BGBM/kdetreez/kdetreez.R', echo=TRUE)
mat_dis_iqtree <- reshape2::melt(data.frame(mat_dis_iqtree))
reshape2::melt(mat_geo_iqtree)
source('~/Desktop/Yannick/BGBM/kdetreez/kdetreez.R', echo=TRUE)
mat_dis_pylogeny <- reshape2::melt(mat_dis_pylogeny)
mat_dis_pylogeny <- reshape2::melt(mat_dis_pylogeny)
mat_dis_pylogeny
head(mat_dis_pylogeny)
ggplot(mat_dis_pylogeny, aes(Var1, variable)) + geom_tile(aes(fill = value))
mat_dis_pylogeny
source('~/Desktop/Yannick/BGBM/kdetreez/kdetreez.R', echo=TRUE)
mat_dis_iqtree
reshape2::melt(mat_dis_iqtree)
mat_dis_iqtree <- reshape2::melt(mat_dis_iqtree)
mat_dis_iqtree
head(mat_dis_iqtree)
#mat_dis_pylogeny <- reshape2::melt(mat_dis_pylogeny)
#mat_geo_pylogeny <- reshape2::melt(mat_geo_pylogeny)
ggplot(mat_dis_pylogeny, aes(Var1, Var2)) + geom_tile(aes(fill = value))
#mat_dis_pylogeny <- reshape2::melt(mat_dis_pylogeny)
#mat_geo_pylogeny <- reshape2::melt(mat_geo_pylogeny)
ggplot(mat_dis_iqtree, aes(Var1, Var2)) + geom_tile(aes(fill = value))
#mat_dis_pylogeny <- reshape2::melt(mat_dis_pylogeny)
#mat_geo_pylogeny <- reshape2::melt(mat_geo_pylogeny)
ggplot(mat_dis_iqtree, aes(Var2, Var1)) + geom_tile(aes(fill = value))
#mat_dis_pylogeny <- reshape2::melt(mat_dis_pylogeny)
#mat_geo_pylogeny <- reshape2::melt(mat_geo_pylogeny)
ggplot(mat_dis_iqtree, aes(Var2, Var1)) +  geom_tile(aes(fill = value), colour = "white")
#mat_dis_pylogeny <- reshape2::melt(mat_dis_pylogeny)
#mat_geo_pylogeny <- reshape2::melt(mat_geo_pylogeny)
ggplot(mat_dis_iqtree, aes(Var2, Var1)) +  geom_tile(aes(fill = value), colour = "white") + scale_fill_gradient(low = "white", high = "steelblue"))
#mat_dis_pylogeny <- reshape2::melt(mat_dis_pylogeny)
#mat_geo_pylogeny <- reshape2::melt(mat_geo_pylogeny)
ggplot(mat_dis_iqtree, aes(Var2, Var1)) +  geom_tile(aes(fill = value), colour = "white") + scale_fill_gradient(low = "white", high = "steelblue")
#mat_dis_pylogeny <- reshape2::melt(mat_dis_pylogeny)
#mat_geo_pylogeny <- reshape2::melt(mat_geo_pylogeny)
ggplot(mat_dis_iqtree, aes(Var2, Var1)) +  geom_tile(aes(fill = value), colour = "white")
#mat_dis_pylogeny <- reshape2::melt(mat_dis_pylogeny)
#mat_geo_pylogeny <- reshape2::melt(mat_geo_pylogeny)
ggplot(mat_dis_iqtree, aes(Var2, Var1)) +  geom_tile(aes(fill = value), colour = "white") + scale_fill_gradient(low = "gray", high = "black"))
#mat_dis_pylogeny <- reshape2::melt(mat_dis_pylogeny)
#mat_geo_pylogeny <- reshape2::melt(mat_geo_pylogeny)
ggplot(mat_dis_iqtree, aes(Var2, Var1)) +  geom_tile(aes(fill = value), colour = "white") + scale_fill_gradient(low = "gray", high = "black")
#mat_dis_pylogeny <- reshape2::melt(mat_dis_pylogeny)
#mat_geo_pylogeny <- reshape2::melt(mat_geo_pylogeny)
ggplot(mat_dis_iqtree, aes(Var2, Var1)) +  geom_tile(aes(fill = value), colour = "white") + scale_fill_gradient(low = "gray", high = "darkgray")
#mat_dis_pylogeny <- reshape2::melt(mat_dis_pylogeny)
#mat_geo_pylogeny <- reshape2::melt(mat_geo_pylogeny)
ggplot(mat_dis_iqtree, aes(Var2, Var1)) +  geom_tile(aes(fill = value), colour = "white") + scale_fill_gradient(low = "drakgray", high = "black")
#mat_dis_pylogeny <- reshape2::melt(mat_dis_pylogeny)
#mat_geo_pylogeny <- reshape2::melt(mat_geo_pylogeny)
ggplot(mat_dis_iqtree, aes(Var2, Var1)) +  geom_tile(aes(fill = value), colour = "white") + scale_fill_gradient(low = "darkgray", high = "black")
source('~/Desktop/Yannick/BGBM/kdetreez/kdetreez.R', echo=TRUE)
ggplot(mat_dis_iqtree, aes(Var2, Var1)) +  geom_tile(aes(fill = value), colour = "white") + scale_fill_gradient(low = "darkgray", high = "black")+ ggtitle("IQTree Dissimilarity"
ggplot(mat_dis_iqtree, aes(Var2, Var1)) +  geom_tile(aes(fill = value), colour = "white") + scale_fill_gradient(low = "darkgray", high = "black")+ ggtitle("IQTree Dissimilarity"
ggplot(mat_dis_iqtree, aes(Var2, Var1)) +  geom_tile(aes(fill = value), colour = "white") + scale_fill_gradient(low = "darkgray", high = "black")+ ggtitle("IQTree Dissimilarity")
source('~/Desktop/Yannick/BGBM/kdetreez/kdetreez.R', echo=TRUE)
ggplot(mat_dis_iqtree, aes(Var2, Var1)) + geom_tile( colour = "white") + scale_fill_gradient(low = "darkgray", high = "black") + ggtitle("IQTree dissimilarity") +
xlab("k") + ylab("Best tree for gene")
?geom_tile
ggplot(mat_dis_iqtree, aes(Var2, Var1)) + geom_tile(aes(fill = value), colour = "white", show.legend =F) + scale_fill_gradient(low = "darkgray", high = "black") + ggtitle("IQTree dissimilarity") +
xlab("k") + ylab("Best tree for gene")
ggplot(mat_dis_iqtree, aes(Var2, Var1)) + geom_tile(aes(fill = value), colour = "white", show.legend=F) + scale_fill_gradient(low = "darkgray", high = "black") + ggtitle("IQTree dissimilarity") +
xlab("k") + ylab("Best tree for gene") + opts(axis.ticks = theme_blank())
?opts
ggplot(mat_dis_iqtree, aes(Var2, Var1)) + geom_tile(aes(fill = value), colour = "white", show.legend=F,axis.ticks = theme_blank()) + scale_fill_gradient(low = "darkgray", high = "black") + ggtitle("IQTree dissimilarity") +
xlab("k") + ylab("Best tree for gene")
ggplot(mat_dis_iqtree, aes(Var2, Var1)) + geom_tile(aes(fill = value), colour = "white", show.legend=F) + scale_fill_gradient(low = "darkgray", high = "black") + ggtitle("IQTree dissimilarity") +
xlab("k") + ylab("Best tree for gene")
source('~/Desktop/Yannick/BGBM/kdetreez/kdetreez.R', echo=TRUE)
